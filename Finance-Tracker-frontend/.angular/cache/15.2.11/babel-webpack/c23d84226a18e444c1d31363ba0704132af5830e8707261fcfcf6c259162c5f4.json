{"ast":null,"code":"import DataTable from 'datatables.net-dt';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/clientes.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ListaclientesComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ListaclientesComponent_tr_21_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cliente_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editarCliente(cliente_r1.id));\n    });\n    i0.ɵɵtext(13, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ListaclientesComponent_tr_21_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cliente_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.eliminarCliente(cliente_r1.id));\n    });\n    i0.ɵɵtext(15, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cliente_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.apellido);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.direccion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.telefono);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.fechaRegistro);\n  }\n}\nexport class ListaclientesComponent {\n  constructor(clientesServicio, router) {\n    this.clientesServicio = clientesServicio;\n    this.router = router;\n    this.formcliente = new FormGroup({\n      'nombre': new FormControl('', Validators.required),\n      'apellido': new FormControl('', Validators.required),\n      'telefono': new FormControl('', Validators.required),\n      'direccion': new FormControl('', Validators.required),\n      // Externo al formulario\n      'fechacreacion': new FormControl(0)\n    });\n  }\n  ngOnInit() {\n    this.listarClientes();\n  }\n  crearDatatable() {\n    setTimeout(() => {\n      const table = new DataTable(\"#tabla_clientes\", {});\n    }, 1);\n  }\n  listarClientes() {\n    this.clientesServicio.listarClientes().subscribe({\n      next: res => {\n        this.clientes = res;\n      },\n      error: errorData => {\n        alert(\"Error al cargar los datos\");\n      },\n      complete: () => {\n        alert(\"importacion completada\");\n        this.crearDatatable();\n      }\n    });\n  }\n  verCliente() {\n    this.router.routerLink;\n  }\n  editarCliente(id) {\n    this.clientesServicio.editarCliente(id, this.formcliente.value).subscribe({\n      next: res => {},\n      error: errorData => {\n        alert(\"Error al editar el cliente\");\n      },\n      complete: () => {\n        alert(\"Cliente editado\");\n      }\n    });\n  }\n  eliminarCliente(id) {\n    this.clientesServicio.eliminarCliente(id).subscribe({\n      next: res => {},\n      error: errorData => {\n        alert(\"Error al eliminar el cliente\");\n      },\n      complete: () => {\n        alert(\"Cliente eliminado\");\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ListaclientesComponent_Factory(t) {\n    return new (t || ListaclientesComponent)(i0.ɵɵdirectiveInject(i1.ClientesService), i0.ɵɵdirectiveInject(i2.RouterLink));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListaclientesComponent,\n    selectors: [[\"app-listaclientes\"]],\n    decls: 22,\n    vars: 1,\n    consts: [[1, \"titulo\"], [1, \"titulo_texto\", \"text-center\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"tabla_clientes\", 1, \"table\"], [1, \"cell-border\", \"table-striped\", \"stripe\", \"hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function ListaclientesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Lista de clientes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ListaclientesComponent_Template_button_click_3_listener() {\n          return ctx.crearCliente();\n        });\n        i0.ɵɵtext(4, \"Agregar Cliente\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"table\", 3)(6, \"thead\", 4)(7, \"tr\")(8, \"th\");\n        i0.ɵɵtext(9, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Apellido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Direcci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Tel\\u00E9fono\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Estado\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Acciones\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"tbody\");\n        i0.ɵɵtemplate(21, ListaclientesComponent_tr_21_Template, 16, 5, \"tr\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.clientes);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["DataTable","FormControl","FormGroup","Validators","i0","ListaclientesComponent","constructor","clientesServicio","router","required","ngOnInit","listarClientes","crearDatatable","setTimeout","table","subscribe","next","res","clientes","error","errorData","alert","complete","verCliente","routerLink","editarCliente","id","formcliente","value","eliminarCliente","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Documentos\\Desarrollo\\proyectos\\Proyectos funcionales\\Angular\\CRUD\\crud-frontend\\src\\app\\admin\\components\\listaclientes\\listaclientes.component.ts","D:\\Documentos\\Desarrollo\\proyectos\\Proyectos funcionales\\Angular\\CRUD\\crud-frontend\\src\\app\\admin\\components\\listaclientes\\listaclientes.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport DataTable from 'datatables.net-dt';\nimport { ClientesService } from '../../services/clientes.service';\nimport { clientes } from '../../models/clientes';\nimport { RouterLink } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-listaclientes',\n  templateUrl: './listaclientes.component.html',\n  styleUrls: ['./listaclientes.component.css']\n})\n\n\n\nexport class ListaclientesComponent implements OnInit{\n\n  clientes:clientes[];\n\n  constructor(private clientesServicio: ClientesService, private router:RouterLink){}\n\n  ngOnInit(): void {\n    this.listarClientes();\n  }\n\n  crearDatatable() {\n    setTimeout(() => {\n      const table= new DataTable(\"#tabla_clientes\",{\n        \n      });\n    }, 1);\n  }\n\n  listarClientes(){\n    this.clientesServicio.listarClientes().subscribe({\n      next: (res) => {\n        this.clientes=res;\n      },\n      error: (errorData) => {\n       alert(\"Error al cargar los datos\")\n      },\n      complete: () => {\n        alert(\"importacion completada\");\n        this.crearDatatable();\n      }\n    });\n  }\n\n  verCliente(){\n    this.router.routerLink\n  }\n\n\n  formcliente = new FormGroup({\n    'nombre': new FormControl('', Validators.required),\n    'apellido': new FormControl('', Validators.required),\n    'telefono': new FormControl('', Validators.required),\n    'direccion': new FormControl('', Validators.required),\n    // Externo al formulario\n    'fechacreacion': new FormControl(0)\n  });\n\n  editarCliente(id:number){\n    this.clientesServicio.editarCliente(id, this.formcliente.value).subscribe({\n      next:(res)=>{\n\n      },\n      error:(errorData)=>{\n        alert(\"Error al editar el cliente\")\n      },\n      complete:()=>{\n        alert(\"Cliente editado\");\n      }\n    });\n  }\n\n  eliminarCliente(id:number){\n    this.clientesServicio.eliminarCliente(id).subscribe({\n      next:(res)=>{\n\n      },\n      error:(errorData)=>{\n        alert(\"Error al eliminar el cliente\");\n      },\n      complete:()=>{\n        alert(\"Cliente eliminado\");\n      }\n    });\n  }\n}\n","\n<div class=\"titulo\">\n    <h2 class=\"titulo_texto text-center\">Lista de clientes</h2>\n    <button (click)=\"crearCliente()\" class=\"btn btn-primary\">Agregar Cliente</button>\n</div>\n\n<table id=\"tabla_clientes\" class=\"table\">\n    <thead  class=\"cell-border table-striped stripe hover\">\n        <tr>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <th>Dirección</th>\n            <th>Teléfono</th>\n            <th>Estado</th>\n            <th>Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor= \"let cliente of clientes\">\n            <td>{{cliente.nombre}}</td>\n            <td>{{cliente.apellido}}</td>\n            <td>{{cliente.direccion}}</td>\n            <td>{{cliente.telefono}}</td>\n            <td>{{cliente.fechaRegistro}}</td>\n            <td><button (click)=\"editarCliente(cliente.id)\" class=\"btn btn-success\">Editar</button> <button (click)=\"eliminarCliente(cliente.id)\" class=\"btn btn-danger\">Eliminar</button></td>\n        </tr>\n    </tbody>\n</table>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}