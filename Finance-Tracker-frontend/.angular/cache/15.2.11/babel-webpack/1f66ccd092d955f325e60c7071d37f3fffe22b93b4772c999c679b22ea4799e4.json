{"ast":null,"code":"import { transaction } from '../../models/transaction';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/transaction.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateTransactionComponent {\n  constructor(transactionService, router, route) {\n    this.transactionService = transactionService;\n    this.router = router;\n    this.route = route;\n    this.transaction = new transaction();\n    this.formtransaction = new FormGroup({\n      'type': new FormControl(this.transaction.type, Validators.required),\n      'amount': new FormControl(this.transaction.amount, Validators.required),\n      'categoryName': new FormControl(this.transaction.categoryName, Validators.required),\n      'date': new FormControl(this.transaction.date, Validators.required),\n      'description': new FormControl(this.transaction.description, Validators.required),\n      'id': new FormControl(0)\n    });\n  }\n  ngOnInit() {\n    this.idtransaction = this.route.snapshot.params[\"id\"];\n    this.loadTransaction();\n  }\n  actualizarFormulario() {\n    this.formtransaction = new FormGroup({\n      'type': new FormControl(this.transaction.type, Validators.required),\n      'amount': new FormControl(this.transaction.amount, Validators.required),\n      'categoryName': new FormControl(this.transaction.categoryName, Validators.required),\n      'date': new FormControl(this.transaction.date, Validators.required),\n      'description': new FormControl(this.transaction.description, Validators.required),\n      'id': new FormControl(this.transaction.id, Validators.required)\n    });\n  }\n  loadTransaction() {\n    this.transactionService.seeTransaction(this.idtransaction).subscribe({\n      next: res => {\n        this.transaction = res;\n        console.log(this.transaction);\n      },\n      error: errorData => {\n        alert(\"Error al carga la información de la transacción\");\n      },\n      complete: () => {\n        this.actualizarFormulario();\n        alert(\"Datos cargados\");\n      }\n    });\n  }\n  backToList() {\n    this.router.navigate([\"/dashboard/listTransactions\"]);\n  }\n  updateTransaction() {\n    this.formtransaction.get('id')?.setValue(this.idtransaction);\n    this.transactionService.updateTransaction(this.idtransaction, this.formtransaction.value).subscribe({\n      next: res => {},\n      error: errorData => {\n        alert(\"Error al editar la transacción\");\n      },\n      complete: () => {\n        alert(\"Transacción editada\");\n      }\n    });\n  }\n  static #_ = this.ɵfac = function UpdateTransactionComponent_Factory(t) {\n    return new (t || UpdateTransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateTransactionComponent,\n    selectors: [[\"app-update-transaction\"]],\n    decls: 31,\n    vars: 2,\n    consts: [[1, \"titulo\"], [1, \"text-center\"], [3, \"formGroup\"], [1, \"container\", \"row\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"nombre\"], [\"type\", \"text\", \"formControlName\", \"type\", 1, \"form-control\"], [\"for\", \"url\"], [\"type\", \"text\", \"formControlName\", \"amount\", 1, \"form-control\"], [1, \"form-group\", \"col-md-12\"], [\"for\", \"descripcion\"], [\"type\", \"text\", \"formControlName\", \"categoryName\", 1, \"form-control\"], [\"for\", \"fecha\"], [\"type\", \"date\", \"formControlName\", \"date\", 1, \"form-control\"], [\"for\", \"\"], [\"type\", \"text\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"buttons\", \"form-group\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n    template: function UpdateTransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Tipo de transacci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Cantidad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Categor\\u00EDa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"textarea\", 11);\n        i0.ɵɵtext(17, \"            \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 12);\n        i0.ɵɵtext(20, \"Fecha de transacci\\u00F3n:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\", 14);\n        i0.ɵɵtext(24, \"Descripci\\u00F3n:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 16)(27, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function UpdateTransactionComponent_Template_button_click_27_listener() {\n          return ctx.backToList();\n        });\n        i0.ɵɵtext(28, \"Volver\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function UpdateTransactionComponent_Template_button_click_29_listener() {\n          return ctx.updateTransaction();\n        });\n        i0.ɵɵtext(30, \"Editar\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"transacci\\u00F3n numero \", ctx.idtransaction, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.formtransaction);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["transaction","FormControl","FormGroup","Validators","UpdateTransactionComponent","constructor","transactionService","router","route","type","required","amount","categoryName","date","description","ngOnInit","idtransaction","snapshot","params","loadTransaction","actualizarFormulario","formtransaction","id","seeTransaction","subscribe","next","res","console","log","error","errorData","alert","complete","backToList","navigate","updateTransaction","get","setValue","value","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\Documentos\\Desarrollo\\pruebas\\Finance Tracker\\Finance-Tracker-frontend\\src\\app\\admin\\components\\update-transaction\\update-transaction.component.ts","D:\\Documentos\\Desarrollo\\pruebas\\Finance Tracker\\Finance-Tracker-frontend\\src\\app\\admin\\components\\update-transaction\\update-transaction.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { transaction } from '../../models/transaction';\nimport { TransactionService } from '../../services/transaction.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-transaction',\n  templateUrl: './update-transaction.component.html',\n  styleUrls: ['./update-transaction.component.css']\n})\nexport class UpdateTransactionComponent {\n\n  idtransaction:number;\n  transaction:transaction= new transaction();\n  constructor(private transactionService:TransactionService, private router:Router, private route:ActivatedRoute){}\n  \n  ngOnInit(): void {\n    this.idtransaction= this.route.snapshot.params[\"id\"];\n    this.loadTransaction()\n  }\n  \n  formtransaction= new FormGroup({\n      'type': new FormControl(this.transaction.type, Validators.required),\n      'amount': new FormControl(this.transaction.amount, Validators.required),\n      'categoryName': new FormControl(this.transaction.categoryName, Validators.required),\n      'date': new FormControl(this.transaction.date, Validators.required),\n      'description': new FormControl(this.transaction.description, Validators.required),\n      'id': new FormControl(0)\n  });\n\n  actualizarFormulario(){\n    this.formtransaction = new FormGroup ({\n      'type': new FormControl(this.transaction.type, Validators.required),\n      'amount': new FormControl(this.transaction.amount, Validators.required),\n      'categoryName': new FormControl(this.transaction.categoryName, Validators.required),\n      'date': new FormControl(this.transaction.date, Validators.required),\n      'description': new FormControl(this.transaction.description, Validators.required),\n      'id': new FormControl(this.transaction.id, Validators.required)\n    });\n  }\n  \n  loadTransaction(){\n    this.transactionService.seeTransaction(this.idtransaction).subscribe({\n      next:(res)=>{\n        this.transaction=res;\n        console.log(this.transaction);\n      },\n      error: (errorData)=> {\n        alert(\"Error al carga la información de la transacción\");\n      },\n      complete: () => {\n        this.actualizarFormulario();\n        alert(\"Datos cargados\");\n      }\n    });\n  }\n\n  backToList(){\n    this.router.navigate([\"/dashboard/listTransactions\"]);\n  }\n\n  updateTransaction(){\n    this.formtransaction.get('id')?.setValue(this.idtransaction);\n    this.transactionService.updateTransaction(this.idtransaction, this.formtransaction.value).subscribe({\n      next:(res)=>{\n      },\n      error:(errorData)=>{\n        alert(\"Error al editar la transacción\")\n      },\n      complete:()=>{\n        alert(\"Transacción editada\");\n      }\n    });\n  }\n}\n","<div class=\"titulo\">\n    <h2 class=\"text-center\">transacción numero {{idtransaction}}</h2>\n</div>\n\n<form [formGroup]=\"formtransaction\">\n    <div class=\"container row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"nombre\">Tipo de transacción</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"type\">\n        </div>\n    \n        <div class=\"form-group col-md-6\">\n            <label for=\"url\">Cantidad</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"amount\">\n        </div>\n    \n        <div class=\"form-group col-md-12\">\n            <label for=\"descripcion\">Categoría:</label>\n            <textarea class=\"form-control\" type=\"text\" formControlName=\"categoryName\">\n            </textarea>\n        </div>\n    \n        <div class=\"form-group col-md-6\">\n            <label for=\"fecha\">Fecha de transacción:</label>\n            <input class=\"form-control\" type=\"date\" formControlName=\"date\">\n        </div>\n    \n        <div class=\"form-group col-md-6\">\n            <label for=\"\">Descripción:</label>\n            <input class=\"form-control\" type=\"text\"  formControlName=\"description\">\n        </div>\n        <div class=\"buttons form-group\">\n            <button (click)=\"backToList()\" class=\"btn btn-primary\">Volver</button>\n            <button (click)=\"updateTransaction()\" class=\"btn btn-success\">Editar</button>\n        </div>\n    </div>\n</form>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}