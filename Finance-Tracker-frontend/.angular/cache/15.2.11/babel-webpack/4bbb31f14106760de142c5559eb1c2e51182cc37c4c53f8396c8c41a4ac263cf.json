{"ast":null,"code":"import { transaction } from '../../models/transaction';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/transaction.service\";\nimport * as i2 from \"../../services/category.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction UpdateTransactionComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", category_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r1.name);\n  }\n}\nexport class UpdateTransactionComponent {\n  constructor(transactionService, categoryService, router, route) {\n    this.transactionService = transactionService;\n    this.categoryService = categoryService;\n    this.router = router;\n    this.route = route;\n    this.transaction = new transaction();\n    this.formtransaction = new FormGroup({\n      'type': new FormControl(this.transaction.type, Validators.required),\n      'amount': new FormControl(this.transaction.amount, Validators.required),\n      'categoryName': new FormControl(this.transaction.categoryName, Validators.required),\n      'categoryId': new FormControl(this.transaction.categoryId, Validators.required),\n      'date': new FormControl(this.transaction.date, Validators.required),\n      'description': new FormControl(this.transaction.description, Validators.required),\n      'id': new FormControl(0)\n    });\n  }\n  ngOnInit() {\n    this.idtransaction = this.route.snapshot.params[\"id\"];\n    this.loadCategories();\n    this.loadTransaction();\n  }\n  loadCategories() {\n    this.categoryService.listCategories().subscribe({\n      next: res => {\n        this.categories = res;\n      },\n      error: errorData => {\n        alert(\"Error al registrar la transaccion\");\n      },\n      complete: () => {\n        //alert(\"categorias Importadas\");\n      }\n    });\n  }\n  actualizarFormulario() {\n    this.formtransaction = new FormGroup({\n      'type': new FormControl(this.transaction.type, Validators.required),\n      'amount': new FormControl(this.transaction.amount, Validators.required),\n      'categoryName': new FormControl(this.transaction.categoryName, Validators.required),\n      'categoryId': new FormControl(this.transaction.categoryId, Validators.required),\n      'date': new FormControl(this.transaction.date, Validators.required),\n      'description': new FormControl(this.transaction.description, Validators.required),\n      'id': new FormControl(this.transaction.id, Validators.required)\n    });\n  }\n  loadTransaction() {\n    this.transactionService.seeTransaction(this.idtransaction).subscribe({\n      next: res => {\n        this.transaction = res;\n        console.log(this.transaction);\n      },\n      error: errorData => {\n        alert(\"Error al carga la información de la transacción\");\n      },\n      complete: () => {\n        this.actualizarFormulario();\n        alert(\"Datos cargados\");\n      }\n    });\n  }\n  backToList() {\n    this.router.navigate([\"/dashboard/listTransactions\"]);\n  }\n  updateTransaction() {\n    var idcategory = this.formtransaction.get('categoryName')?.value;\n    this.formtransaction.get('categoryId')?.setValue(idcategory);\n    this.formtransaction.get('id')?.setValue(this.idtransaction);\n    this.transactionService.updateTransaction(this.idtransaction, this.formtransaction.value).subscribe({\n      next: res => {},\n      error: errorData => {\n        alert(\"Error al editar la transacción\");\n      },\n      complete: () => {\n        alert(\"Transacción editada\");\n      }\n    });\n  }\n  static #_ = this.ɵfac = function UpdateTransactionComponent_Factory(t) {\n    return new (t || UpdateTransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionService), i0.ɵɵdirectiveInject(i2.CategoryoService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateTransactionComponent,\n    selectors: [[\"app-update-transaction\"]],\n    decls: 33,\n    vars: 3,\n    consts: [[1, \"titulo\"], [1, \"text-center\"], [3, \"formGroup\"], [1, \"container\", \"row\"], [1, \"form-group\", \"col-md-6\"], [\"for\", \"nombre\"], [\"type\", \"text\", \"formControlName\", \"type\", 1, \"form-control\"], [\"for\", \"url\"], [\"type\", \"text\", \"formControlName\", \"amount\", 1, \"form-control\"], [\"for\", \"descripcion\"], [\"formControlName\", \"categoryName\", 1, \"form-select\", \"modal__input\"], [\"selected\", \"\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"fecha\"], [\"type\", \"date\", \"formControlName\", \"date\", 1, \"form-control\"], [\"for\", \"\"], [\"type\", \"text\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"buttons\", \"form-group\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"selected\", \"\", 3, \"value\"]],\n    template: function UpdateTransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Tipo de transacci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Cantidad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Categor\\u00EDa:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 10)(17, \"option\");\n        i0.ɵɵtext(18, \"Seleccione una opci\\u00F3n...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, UpdateTransactionComponent_option_19_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 4)(21, \"label\", 12);\n        i0.ɵɵtext(22, \"Fecha de transacci\\u00F3n:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 4)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Descripci\\u00F3n:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 16)(29, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function UpdateTransactionComponent_Template_button_click_29_listener() {\n          return ctx.backToList();\n        });\n        i0.ɵɵtext(30, \"Volver\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function UpdateTransactionComponent_Template_button_click_31_listener() {\n          return ctx.updateTransaction();\n        });\n        i0.ɵɵtext(32, \"Editar\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"transacci\\u00F3n numero \", ctx.idtransaction, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.formtransaction);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["transaction","FormControl","FormGroup","Validators","i0","UpdateTransactionComponent","constructor","transactionService","categoryService","router","route","type","required","amount","categoryName","categoryId","date","description","ngOnInit","idtransaction","snapshot","params","loadCategories","loadTransaction","listCategories","subscribe","next","res","categories","error","errorData","alert","complete","actualizarFormulario","formtransaction","id","seeTransaction","console","log","backToList","navigate","updateTransaction","idcategory","get","value","setValue","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Documentos\\Desarrollo\\pruebas\\Finance Tracker\\Finance-Tracker-frontend\\src\\app\\admin\\components\\update-transaction\\update-transaction.component.ts","D:\\Documentos\\Desarrollo\\pruebas\\Finance Tracker\\Finance-Tracker-frontend\\src\\app\\admin\\components\\update-transaction\\update-transaction.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { transaction } from '../../models/transaction';\nimport { TransactionService } from '../../services/transaction.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { category } from '../../models/category';\nimport { CategoryoService } from '../../services/category.service';\n\n@Component({\n  selector: 'app-update-transaction',\n  templateUrl: './update-transaction.component.html',\n  styleUrls: ['./update-transaction.component.css']\n})\nexport class UpdateTransactionComponent {\n  categories:category[];\n  idtransaction:number;\n  transaction:transaction= new transaction();\n  constructor(private transactionService:TransactionService, private categoryService:CategoryoService, private router:Router, private route:ActivatedRoute){}\n  \n  ngOnInit(): void {\n    this.idtransaction= this.route.snapshot.params[\"id\"];\n    this.loadCategories();\n    this.loadTransaction();\n  }\n\n  loadCategories(){\n    this.categoryService.listCategories().subscribe({\n      next:(res)=>{\n        this.categories=res;\n      },\n      error:(errorData)=>{\n        alert(\"Error al registrar la transaccion\")\n      },\n      complete:()=>{\n        //alert(\"categorias Importadas\");\n      }\n    });\n  }\n\n  \n  formtransaction= new FormGroup({\n      'type': new FormControl(this.transaction.type, Validators.required),\n      'amount': new FormControl(this.transaction.amount, Validators.required),\n      'categoryName': new FormControl(this.transaction.categoryName, Validators.required),\n      'categoryId': new FormControl(this.transaction.categoryId, Validators.required),\n      'date': new FormControl(this.transaction.date, Validators.required),\n      'description': new FormControl(this.transaction.description, Validators.required),\n      'id': new FormControl(0)\n  });\n\n  actualizarFormulario(){\n    this.formtransaction = new FormGroup ({\n      'type': new FormControl(this.transaction.type, Validators.required),\n      'amount': new FormControl(this.transaction.amount, Validators.required),\n      'categoryName': new FormControl(this.transaction.categoryName, Validators.required),\n      'categoryId': new FormControl(this.transaction.categoryId, Validators.required),\n      'date': new FormControl(this.transaction.date, Validators.required),\n      'description': new FormControl(this.transaction.description, Validators.required),\n      'id': new FormControl(this.transaction.id, Validators.required)\n    });\n  }\n  \n  loadTransaction(){\n    this.transactionService.seeTransaction(this.idtransaction).subscribe({\n      next:(res)=>{\n        this.transaction=res;\n        console.log(this.transaction);\n      },\n      error: (errorData)=> {\n        alert(\"Error al carga la información de la transacción\");\n      },\n      complete: () => {\n        this.actualizarFormulario();\n        alert(\"Datos cargados\");\n      }\n    });\n  }\n\n  backToList(){\n    this.router.navigate([\"/dashboard/listTransactions\"]);\n  }\n\n  updateTransaction(){\n    var idcategory:any = this.formtransaction.get('categoryName')?.value;\n    this.formtransaction.get('categoryId')?.setValue(idcategory);\n    this.formtransaction.get('id')?.setValue(this.idtransaction);\n    this.transactionService.updateTransaction(this.idtransaction, this.formtransaction.value).subscribe({\n      next:(res)=>{\n      },\n      error:(errorData)=>{\n        alert(\"Error al editar la transacción\")\n      },\n      complete:()=>{\n        alert(\"Transacción editada\");\n      }\n    });\n  }\n}\n","<div class=\"titulo\">\n    <h2 class=\"text-center\">transacción numero {{idtransaction}}</h2>\n</div>\n\n<form [formGroup]=\"formtransaction\">\n    <div class=\"container row\">\n        <div class=\"form-group col-md-6\">\n            <label for=\"nombre\">Tipo de transacción</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"type\">\n        </div>\n    \n        <div class=\"form-group col-md-6\">\n            <label for=\"url\">Cantidad</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"amount\">\n        </div>\n    \n        <div class=\"form-group col-md-6\">\n            <label for=\"descripcion\">Categoría:</label>\n            <select  class=\"form-select modal__input\" formControlName=\"categoryName\">\n                <option >Seleccione una opción...</option>\n                <option selected *ngFor=\"let category of categories\" value={{category.id}}>{{category.name}}</option>\n            <!--   <div class=\"alert alert-danger\" *ngIf=\"email.invalid && (email.dirty || email.touched)\">\n                <div *ngIf=\"email.errors?.['minlength']\">\n                    Digite su email por favor\n                </div>\n                <div *ngIf=\"email.errors?.['pattern']\">\n                    Por favor digite el email con el siguiente formato : user100@gmail.com\n                </div>\n            </div>-->\n            </select>\n        </div>\n    \n        <div class=\"form-group col-md-6\">\n            <label for=\"fecha\">Fecha de transacción:</label>\n            <input class=\"form-control\" type=\"date\" formControlName=\"date\">\n        </div>\n    \n        <div class=\"form-group col-md-6\">\n            <label for=\"\">Descripción:</label>\n            <input class=\"form-control\" type=\"text\"  formControlName=\"description\">\n        </div>\n        <div class=\"buttons form-group\">\n            <button (click)=\"backToList()\" class=\"btn btn-primary\">Volver</button>\n            <button (click)=\"updateTransaction()\" class=\"btn btn-success\">Editar</button>\n        </div>\n    </div>\n</form>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}